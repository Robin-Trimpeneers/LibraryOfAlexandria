events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;  # Add MIME type inclusion
    default_type  application/octet-stream;

    server {
        listen 8080;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        # Enable gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        
        # Static files handling
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
            expires 6M;
            access_log off;
            add_header Cache-Control "public, max-age=15552000";
            try_files $uri $uri/ =404;  # Modified line
        }

        # Main location block
        location / {
            try_files $uri $uri/ /index.html;
        }

        # API proxy configuration
        # Auth endpoints - keep /api prefix as Spring Boot expects /api/auth
        location /api/auth/ {
            proxy_pass http://springboot-app:5050/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cookie_path / "/";
            proxy_cookie_domain localhost $host;
        }
        
        # Book endpoints - strip /api prefix as Spring Boot expects /book
        location /api/book {
            proxy_pass http://springboot-app:5050/book;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cookie_path / "/";
            proxy_cookie_domain localhost $host;

            # Remove CORS headers to avoid conflicts with Spring Boot's CORS configuration
            # add_header 'Access-Control-Allow-Origin' '*' always;
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;

            if ($request_method = OPTIONS) {
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
        }

        # Error handling
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}